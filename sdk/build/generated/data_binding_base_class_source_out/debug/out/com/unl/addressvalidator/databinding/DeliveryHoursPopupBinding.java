// Generated by view binder compiler. Do not edit!
package com.unl.addressvalidator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.unl.addressvalidator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DeliveryHoursPopupBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatImageView addImage;

  @NonNull
  public final AppCompatImageView editAddress;

  @NonNull
  public final AppCompatTextView headerTitle;

  @NonNull
  public final AppCompatTextView imageCount;

  @NonNull
  public final ImageView ivCheckElevator;

  @NonNull
  public final ImageView ivCheckWheelchair;

  @NonNull
  public final AppCompatImageView ivClose;

  @NonNull
  public final ImageView ivElevator;

  @NonNull
  public final ImageView ivWheelChair;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final LinearLayout llFromHours;

  @NonNull
  public final LinearLayout llToHours;

  @NonNull
  public final RelativeLayout rlAccessibility;

  @NonNull
  public final RelativeLayout rlClosingHours;

  @NonNull
  public final RelativeLayout rlOpeningHours;

  @NonNull
  public final RelativeLayout rlWheelChair;

  @NonNull
  public final RecyclerView rvDays;

  @NonNull
  public final RecyclerView rvFromHour;

  @NonNull
  public final RecyclerView rvFromMin;

  @NonNull
  public final RecyclerView rvToHour;

  @NonNull
  public final RecyclerView rvToMin;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final AppCompatTextView tvAM;

  @NonNull
  public final AppCompatTextView tvAMPMText;

  @NonNull
  public final AppCompatTextView tvAccessibility;

  @NonNull
  public final AppCompatTextView tvAddressText;

  @NonNull
  public final AppCompatTextView tvConfirm;

  @NonNull
  public final AppCompatTextView tvElevator;

  @NonNull
  public final AppCompatTextView tvFromAMPMText;

  @NonNull
  public final AppCompatTextView tvFromHoursText;

  @NonNull
  public final AppCompatTextView tvFromMinText;

  @NonNull
  public final AppCompatTextView tvPM;

  @NonNull
  public final TextView tvSkip;

  @NonNull
  public final AppCompatTextView tvToHoursText;

  @NonNull
  public final AppCompatTextView tvToMinsText;

  @NonNull
  public final AppCompatTextView tvfromAM;

  @NonNull
  public final AppCompatTextView tvfromPM;

  @NonNull
  public final AppCompatTextView tvsetFromHours;

  @NonNull
  public final AppCompatTextView tvsetToHours;

  private DeliveryHoursPopupBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatImageView addImage, @NonNull AppCompatImageView editAddress,
      @NonNull AppCompatTextView headerTitle, @NonNull AppCompatTextView imageCount,
      @NonNull ImageView ivCheckElevator, @NonNull ImageView ivCheckWheelchair,
      @NonNull AppCompatImageView ivClose, @NonNull ImageView ivElevator,
      @NonNull ImageView ivWheelChair, @NonNull LinearLayout linearLayout,
      @NonNull LinearLayout llFromHours, @NonNull LinearLayout llToHours,
      @NonNull RelativeLayout rlAccessibility, @NonNull RelativeLayout rlClosingHours,
      @NonNull RelativeLayout rlOpeningHours, @NonNull RelativeLayout rlWheelChair,
      @NonNull RecyclerView rvDays, @NonNull RecyclerView rvFromHour,
      @NonNull RecyclerView rvFromMin, @NonNull RecyclerView rvToHour,
      @NonNull RecyclerView rvToMin, @NonNull ScrollView scrollView,
      @NonNull AppCompatTextView tvAM, @NonNull AppCompatTextView tvAMPMText,
      @NonNull AppCompatTextView tvAccessibility, @NonNull AppCompatTextView tvAddressText,
      @NonNull AppCompatTextView tvConfirm, @NonNull AppCompatTextView tvElevator,
      @NonNull AppCompatTextView tvFromAMPMText, @NonNull AppCompatTextView tvFromHoursText,
      @NonNull AppCompatTextView tvFromMinText, @NonNull AppCompatTextView tvPM,
      @NonNull TextView tvSkip, @NonNull AppCompatTextView tvToHoursText,
      @NonNull AppCompatTextView tvToMinsText, @NonNull AppCompatTextView tvfromAM,
      @NonNull AppCompatTextView tvfromPM, @NonNull AppCompatTextView tvsetFromHours,
      @NonNull AppCompatTextView tvsetToHours) {
    this.rootView = rootView;
    this.addImage = addImage;
    this.editAddress = editAddress;
    this.headerTitle = headerTitle;
    this.imageCount = imageCount;
    this.ivCheckElevator = ivCheckElevator;
    this.ivCheckWheelchair = ivCheckWheelchair;
    this.ivClose = ivClose;
    this.ivElevator = ivElevator;
    this.ivWheelChair = ivWheelChair;
    this.linearLayout = linearLayout;
    this.llFromHours = llFromHours;
    this.llToHours = llToHours;
    this.rlAccessibility = rlAccessibility;
    this.rlClosingHours = rlClosingHours;
    this.rlOpeningHours = rlOpeningHours;
    this.rlWheelChair = rlWheelChair;
    this.rvDays = rvDays;
    this.rvFromHour = rvFromHour;
    this.rvFromMin = rvFromMin;
    this.rvToHour = rvToHour;
    this.rvToMin = rvToMin;
    this.scrollView = scrollView;
    this.tvAM = tvAM;
    this.tvAMPMText = tvAMPMText;
    this.tvAccessibility = tvAccessibility;
    this.tvAddressText = tvAddressText;
    this.tvConfirm = tvConfirm;
    this.tvElevator = tvElevator;
    this.tvFromAMPMText = tvFromAMPMText;
    this.tvFromHoursText = tvFromHoursText;
    this.tvFromMinText = tvFromMinText;
    this.tvPM = tvPM;
    this.tvSkip = tvSkip;
    this.tvToHoursText = tvToHoursText;
    this.tvToMinsText = tvToMinsText;
    this.tvfromAM = tvfromAM;
    this.tvfromPM = tvfromPM;
    this.tvsetFromHours = tvsetFromHours;
    this.tvsetToHours = tvsetToHours;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DeliveryHoursPopupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DeliveryHoursPopupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.delivery_hours_popup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DeliveryHoursPopupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addImage;
      AppCompatImageView addImage = ViewBindings.findChildViewById(rootView, id);
      if (addImage == null) {
        break missingId;
      }

      id = R.id.editAddress;
      AppCompatImageView editAddress = ViewBindings.findChildViewById(rootView, id);
      if (editAddress == null) {
        break missingId;
      }

      id = R.id.headerTitle;
      AppCompatTextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.imageCount;
      AppCompatTextView imageCount = ViewBindings.findChildViewById(rootView, id);
      if (imageCount == null) {
        break missingId;
      }

      id = R.id.ivCheckElevator;
      ImageView ivCheckElevator = ViewBindings.findChildViewById(rootView, id);
      if (ivCheckElevator == null) {
        break missingId;
      }

      id = R.id.ivCheckWheelchair;
      ImageView ivCheckWheelchair = ViewBindings.findChildViewById(rootView, id);
      if (ivCheckWheelchair == null) {
        break missingId;
      }

      id = R.id.ivClose;
      AppCompatImageView ivClose = ViewBindings.findChildViewById(rootView, id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.ivElevator;
      ImageView ivElevator = ViewBindings.findChildViewById(rootView, id);
      if (ivElevator == null) {
        break missingId;
      }

      id = R.id.ivWheelChair;
      ImageView ivWheelChair = ViewBindings.findChildViewById(rootView, id);
      if (ivWheelChair == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.llFromHours;
      LinearLayout llFromHours = ViewBindings.findChildViewById(rootView, id);
      if (llFromHours == null) {
        break missingId;
      }

      id = R.id.llToHours;
      LinearLayout llToHours = ViewBindings.findChildViewById(rootView, id);
      if (llToHours == null) {
        break missingId;
      }

      id = R.id.rlAccessibility;
      RelativeLayout rlAccessibility = ViewBindings.findChildViewById(rootView, id);
      if (rlAccessibility == null) {
        break missingId;
      }

      id = R.id.rlClosingHours;
      RelativeLayout rlClosingHours = ViewBindings.findChildViewById(rootView, id);
      if (rlClosingHours == null) {
        break missingId;
      }

      id = R.id.rlOpeningHours;
      RelativeLayout rlOpeningHours = ViewBindings.findChildViewById(rootView, id);
      if (rlOpeningHours == null) {
        break missingId;
      }

      id = R.id.rlWheelChair;
      RelativeLayout rlWheelChair = ViewBindings.findChildViewById(rootView, id);
      if (rlWheelChair == null) {
        break missingId;
      }

      id = R.id.rvDays;
      RecyclerView rvDays = ViewBindings.findChildViewById(rootView, id);
      if (rvDays == null) {
        break missingId;
      }

      id = R.id.rvFromHour;
      RecyclerView rvFromHour = ViewBindings.findChildViewById(rootView, id);
      if (rvFromHour == null) {
        break missingId;
      }

      id = R.id.rvFromMin;
      RecyclerView rvFromMin = ViewBindings.findChildViewById(rootView, id);
      if (rvFromMin == null) {
        break missingId;
      }

      id = R.id.rvToHour;
      RecyclerView rvToHour = ViewBindings.findChildViewById(rootView, id);
      if (rvToHour == null) {
        break missingId;
      }

      id = R.id.rvToMin;
      RecyclerView rvToMin = ViewBindings.findChildViewById(rootView, id);
      if (rvToMin == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tvAM;
      AppCompatTextView tvAM = ViewBindings.findChildViewById(rootView, id);
      if (tvAM == null) {
        break missingId;
      }

      id = R.id.tvAMPMText;
      AppCompatTextView tvAMPMText = ViewBindings.findChildViewById(rootView, id);
      if (tvAMPMText == null) {
        break missingId;
      }

      id = R.id.tvAccessibility;
      AppCompatTextView tvAccessibility = ViewBindings.findChildViewById(rootView, id);
      if (tvAccessibility == null) {
        break missingId;
      }

      id = R.id.tvAddressText;
      AppCompatTextView tvAddressText = ViewBindings.findChildViewById(rootView, id);
      if (tvAddressText == null) {
        break missingId;
      }

      id = R.id.tvConfirm;
      AppCompatTextView tvConfirm = ViewBindings.findChildViewById(rootView, id);
      if (tvConfirm == null) {
        break missingId;
      }

      id = R.id.tvElevator;
      AppCompatTextView tvElevator = ViewBindings.findChildViewById(rootView, id);
      if (tvElevator == null) {
        break missingId;
      }

      id = R.id.tvFromAMPMText;
      AppCompatTextView tvFromAMPMText = ViewBindings.findChildViewById(rootView, id);
      if (tvFromAMPMText == null) {
        break missingId;
      }

      id = R.id.tvFromHoursText;
      AppCompatTextView tvFromHoursText = ViewBindings.findChildViewById(rootView, id);
      if (tvFromHoursText == null) {
        break missingId;
      }

      id = R.id.tvFromMinText;
      AppCompatTextView tvFromMinText = ViewBindings.findChildViewById(rootView, id);
      if (tvFromMinText == null) {
        break missingId;
      }

      id = R.id.tvPM;
      AppCompatTextView tvPM = ViewBindings.findChildViewById(rootView, id);
      if (tvPM == null) {
        break missingId;
      }

      id = R.id.tvSkip;
      TextView tvSkip = ViewBindings.findChildViewById(rootView, id);
      if (tvSkip == null) {
        break missingId;
      }

      id = R.id.tvToHoursText;
      AppCompatTextView tvToHoursText = ViewBindings.findChildViewById(rootView, id);
      if (tvToHoursText == null) {
        break missingId;
      }

      id = R.id.tvToMinsText;
      AppCompatTextView tvToMinsText = ViewBindings.findChildViewById(rootView, id);
      if (tvToMinsText == null) {
        break missingId;
      }

      id = R.id.tvfromAM;
      AppCompatTextView tvfromAM = ViewBindings.findChildViewById(rootView, id);
      if (tvfromAM == null) {
        break missingId;
      }

      id = R.id.tvfromPM;
      AppCompatTextView tvfromPM = ViewBindings.findChildViewById(rootView, id);
      if (tvfromPM == null) {
        break missingId;
      }

      id = R.id.tvsetFromHours;
      AppCompatTextView tvsetFromHours = ViewBindings.findChildViewById(rootView, id);
      if (tvsetFromHours == null) {
        break missingId;
      }

      id = R.id.tvsetToHours;
      AppCompatTextView tvsetToHours = ViewBindings.findChildViewById(rootView, id);
      if (tvsetToHours == null) {
        break missingId;
      }

      return new DeliveryHoursPopupBinding((RelativeLayout) rootView, addImage, editAddress,
          headerTitle, imageCount, ivCheckElevator, ivCheckWheelchair, ivClose, ivElevator,
          ivWheelChair, linearLayout, llFromHours, llToHours, rlAccessibility, rlClosingHours,
          rlOpeningHours, rlWheelChair, rvDays, rvFromHour, rvFromMin, rvToHour, rvToMin,
          scrollView, tvAM, tvAMPMText, tvAccessibility, tvAddressText, tvConfirm, tvElevator,
          tvFromAMPMText, tvFromHoursText, tvFromMinText, tvPM, tvSkip, tvToHoursText, tvToMinsText,
          tvfromAM, tvfromPM, tvsetFromHours, tvsetToHours);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
