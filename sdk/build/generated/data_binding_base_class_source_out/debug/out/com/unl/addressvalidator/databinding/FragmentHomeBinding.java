// Generated by view binder compiler. Do not edit!
package com.unl.addressvalidator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.unl.addressvalidator.R;
import com.unl.map.sdk.views.UnlMapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AddEntrancePopupBinding addEntrances;

  @NonNull
  public final AddLandmarkPopupBinding addLandmark;

  @NonNull
  public final AddNewAddressBinding addNewAdd;

  @NonNull
  public final AddPicturesPopupBinding addPicture;

  @NonNull
  public final AddressListBinding addressesView;

  @NonNull
  public final RelativeLayout bottomDialog;

  @NonNull
  public final DialogAddressBinding confirmAddress;

  @NonNull
  public final CardView cvPintHint;

  @NonNull
  public final RelativeLayout header;

  @NonNull
  public final AppCompatTextView headerTitle;

  @NonNull
  public final ImageView hidePinHint;

  @NonNull
  public final AppCompatImageView ivShowAddreess;

  @NonNull
  public final UnlMapView mapView;

  @NonNull
  public final DeliveryHoursPopupBinding operationalHours;

  @NonNull
  public final AppCompatTextView pinHint;

  @NonNull
  public final ProgressBar progressBar;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull AddEntrancePopupBinding addEntrances, @NonNull AddLandmarkPopupBinding addLandmark,
      @NonNull AddNewAddressBinding addNewAdd, @NonNull AddPicturesPopupBinding addPicture,
      @NonNull AddressListBinding addressesView, @NonNull RelativeLayout bottomDialog,
      @NonNull DialogAddressBinding confirmAddress, @NonNull CardView cvPintHint,
      @NonNull RelativeLayout header, @NonNull AppCompatTextView headerTitle,
      @NonNull ImageView hidePinHint, @NonNull AppCompatImageView ivShowAddreess,
      @NonNull UnlMapView mapView, @NonNull DeliveryHoursPopupBinding operationalHours,
      @NonNull AppCompatTextView pinHint, @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.addEntrances = addEntrances;
    this.addLandmark = addLandmark;
    this.addNewAdd = addNewAdd;
    this.addPicture = addPicture;
    this.addressesView = addressesView;
    this.bottomDialog = bottomDialog;
    this.confirmAddress = confirmAddress;
    this.cvPintHint = cvPintHint;
    this.header = header;
    this.headerTitle = headerTitle;
    this.hidePinHint = hidePinHint;
    this.ivShowAddreess = ivShowAddreess;
    this.mapView = mapView;
    this.operationalHours = operationalHours;
    this.pinHint = pinHint;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addEntrances;
      View addEntrances = ViewBindings.findChildViewById(rootView, id);
      if (addEntrances == null) {
        break missingId;
      }
      AddEntrancePopupBinding binding_addEntrances = AddEntrancePopupBinding.bind(addEntrances);

      id = R.id.addLandmark;
      View addLandmark = ViewBindings.findChildViewById(rootView, id);
      if (addLandmark == null) {
        break missingId;
      }
      AddLandmarkPopupBinding binding_addLandmark = AddLandmarkPopupBinding.bind(addLandmark);

      id = R.id.addNewAdd;
      View addNewAdd = ViewBindings.findChildViewById(rootView, id);
      if (addNewAdd == null) {
        break missingId;
      }
      AddNewAddressBinding binding_addNewAdd = AddNewAddressBinding.bind(addNewAdd);

      id = R.id.addPicture;
      View addPicture = ViewBindings.findChildViewById(rootView, id);
      if (addPicture == null) {
        break missingId;
      }
      AddPicturesPopupBinding binding_addPicture = AddPicturesPopupBinding.bind(addPicture);

      id = R.id.addressesView;
      View addressesView = ViewBindings.findChildViewById(rootView, id);
      if (addressesView == null) {
        break missingId;
      }
      AddressListBinding binding_addressesView = AddressListBinding.bind(addressesView);

      id = R.id.bottomDialog;
      RelativeLayout bottomDialog = ViewBindings.findChildViewById(rootView, id);
      if (bottomDialog == null) {
        break missingId;
      }

      id = R.id.confirmAddress;
      View confirmAddress = ViewBindings.findChildViewById(rootView, id);
      if (confirmAddress == null) {
        break missingId;
      }
      DialogAddressBinding binding_confirmAddress = DialogAddressBinding.bind(confirmAddress);

      id = R.id.cvPintHint;
      CardView cvPintHint = ViewBindings.findChildViewById(rootView, id);
      if (cvPintHint == null) {
        break missingId;
      }

      id = R.id.header;
      RelativeLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.headerTitle;
      AppCompatTextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.hidePinHint;
      ImageView hidePinHint = ViewBindings.findChildViewById(rootView, id);
      if (hidePinHint == null) {
        break missingId;
      }

      id = R.id.ivShowAddreess;
      AppCompatImageView ivShowAddreess = ViewBindings.findChildViewById(rootView, id);
      if (ivShowAddreess == null) {
        break missingId;
      }

      id = R.id.mapView;
      UnlMapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.operationalHours;
      View operationalHours = ViewBindings.findChildViewById(rootView, id);
      if (operationalHours == null) {
        break missingId;
      }
      DeliveryHoursPopupBinding binding_operationalHours = DeliveryHoursPopupBinding.bind(operationalHours);

      id = R.id.pinHint;
      AppCompatTextView pinHint = ViewBindings.findChildViewById(rootView, id);
      if (pinHint == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, binding_addEntrances,
          binding_addLandmark, binding_addNewAdd, binding_addPicture, binding_addressesView,
          bottomDialog, binding_confirmAddress, cvPintHint, header, headerTitle, hidePinHint,
          ivShowAddreess, mapView, binding_operationalHours, pinHint, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
