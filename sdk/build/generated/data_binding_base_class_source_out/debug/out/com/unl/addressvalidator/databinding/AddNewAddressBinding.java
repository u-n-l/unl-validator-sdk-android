// Generated by view binder compiler. Do not edit!
package com.unl.addressvalidator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.unl.addressvalidator.R;
import com.unl.addressvalidator.customview.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddNewAddressBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView addImage;

  @NonNull
  public final LinearLayout addLabelView;

  @NonNull
  public final LinearLayout addressView;

  @NonNull
  public final AppCompatTextView currentAddress;

  @NonNull
  public final LinearLayout currentAddressLayout;

  @NonNull
  public final AppCompatImageView deleteAddress;

  @NonNull
  public final TextInputEditText edtBuildingName;

  @NonNull
  public final TextInputEditText edtBuildingNum;

  @NonNull
  public final TextInputEditText edtCity;

  @NonNull
  public final TextInputEditText edtCountry;

  @NonNull
  public final TextInputEditText edtFloor;

  @NonNull
  public final TextInputEditText edtLabelName;

  @NonNull
  public final TextInputEditText edtNeighbour;

  @NonNull
  public final TextInputEditText edtPincode;

  @NonNull
  public final AppCompatEditText edtSearch;

  @NonNull
  public final TextInputEditText edtState;

  @NonNull
  public final TextInputEditText edtStreet;

  @NonNull
  public final TextInputEditText edtUnit;

  @NonNull
  public final AppCompatTextView imageCount;

  @NonNull
  public final ImageView ivAddLabel;

  @NonNull
  public final ImageView ivCheckAddLabel;

  @NonNull
  public final ImageView ivCheckHome;

  @NonNull
  public final ImageView ivCheckOffice;

  @NonNull
  public final ImageView ivHome;

  @NonNull
  public final ImageView ivOffice;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout mainLayout;

  @NonNull
  public final RelativeLayout rlAddLableIcon;

  @NonNull
  public final RelativeLayout rlHomeIcon;

  @NonNull
  public final RelativeLayout rlOfficeIcon;

  @NonNull
  public final RecyclerView rvSearchResult;

  @NonNull
  public final AppCompatTextView tvAddLabel;

  @NonNull
  public final AppCompatTextView tvAddressText;

  @NonNull
  public final AppCompatTextView tvConfirm;

  @NonNull
  public final AppCompatTextView tvHome;

  @NonNull
  public final AppCompatTextView tvOffice;

  @NonNull
  public final AppCompatTextView tvaddressType;

  private AddNewAddressBinding(@NonNull LinearLayout rootView, @NonNull AppCompatImageView addImage,
      @NonNull LinearLayout addLabelView, @NonNull LinearLayout addressView,
      @NonNull AppCompatTextView currentAddress, @NonNull LinearLayout currentAddressLayout,
      @NonNull AppCompatImageView deleteAddress, @NonNull TextInputEditText edtBuildingName,
      @NonNull TextInputEditText edtBuildingNum, @NonNull TextInputEditText edtCity,
      @NonNull TextInputEditText edtCountry, @NonNull TextInputEditText edtFloor,
      @NonNull TextInputEditText edtLabelName, @NonNull TextInputEditText edtNeighbour,
      @NonNull TextInputEditText edtPincode, @NonNull AppCompatEditText edtSearch,
      @NonNull TextInputEditText edtState, @NonNull TextInputEditText edtStreet,
      @NonNull TextInputEditText edtUnit, @NonNull AppCompatTextView imageCount,
      @NonNull ImageView ivAddLabel, @NonNull ImageView ivCheckAddLabel,
      @NonNull ImageView ivCheckHome, @NonNull ImageView ivCheckOffice, @NonNull ImageView ivHome,
      @NonNull ImageView ivOffice, @NonNull LinearLayout linearLayout2,
      @NonNull LinearLayout mainLayout, @NonNull RelativeLayout rlAddLableIcon,
      @NonNull RelativeLayout rlHomeIcon, @NonNull RelativeLayout rlOfficeIcon,
      @NonNull RecyclerView rvSearchResult, @NonNull AppCompatTextView tvAddLabel,
      @NonNull AppCompatTextView tvAddressText, @NonNull AppCompatTextView tvConfirm,
      @NonNull AppCompatTextView tvHome, @NonNull AppCompatTextView tvOffice,
      @NonNull AppCompatTextView tvaddressType) {
    this.rootView = rootView;
    this.addImage = addImage;
    this.addLabelView = addLabelView;
    this.addressView = addressView;
    this.currentAddress = currentAddress;
    this.currentAddressLayout = currentAddressLayout;
    this.deleteAddress = deleteAddress;
    this.edtBuildingName = edtBuildingName;
    this.edtBuildingNum = edtBuildingNum;
    this.edtCity = edtCity;
    this.edtCountry = edtCountry;
    this.edtFloor = edtFloor;
    this.edtLabelName = edtLabelName;
    this.edtNeighbour = edtNeighbour;
    this.edtPincode = edtPincode;
    this.edtSearch = edtSearch;
    this.edtState = edtState;
    this.edtStreet = edtStreet;
    this.edtUnit = edtUnit;
    this.imageCount = imageCount;
    this.ivAddLabel = ivAddLabel;
    this.ivCheckAddLabel = ivCheckAddLabel;
    this.ivCheckHome = ivCheckHome;
    this.ivCheckOffice = ivCheckOffice;
    this.ivHome = ivHome;
    this.ivOffice = ivOffice;
    this.linearLayout2 = linearLayout2;
    this.mainLayout = mainLayout;
    this.rlAddLableIcon = rlAddLableIcon;
    this.rlHomeIcon = rlHomeIcon;
    this.rlOfficeIcon = rlOfficeIcon;
    this.rvSearchResult = rvSearchResult;
    this.tvAddLabel = tvAddLabel;
    this.tvAddressText = tvAddressText;
    this.tvConfirm = tvConfirm;
    this.tvHome = tvHome;
    this.tvOffice = tvOffice;
    this.tvaddressType = tvaddressType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddNewAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddNewAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_new_address, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddNewAddressBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addImage;
      AppCompatImageView addImage = ViewBindings.findChildViewById(rootView, id);
      if (addImage == null) {
        break missingId;
      }

      id = R.id.addLabelView;
      LinearLayout addLabelView = ViewBindings.findChildViewById(rootView, id);
      if (addLabelView == null) {
        break missingId;
      }

      id = R.id.addressView;
      LinearLayout addressView = ViewBindings.findChildViewById(rootView, id);
      if (addressView == null) {
        break missingId;
      }

      id = R.id.currentAddress;
      AppCompatTextView currentAddress = ViewBindings.findChildViewById(rootView, id);
      if (currentAddress == null) {
        break missingId;
      }

      id = R.id.currentAddressLayout;
      LinearLayout currentAddressLayout = ViewBindings.findChildViewById(rootView, id);
      if (currentAddressLayout == null) {
        break missingId;
      }

      id = R.id.deleteAddress;
      AppCompatImageView deleteAddress = ViewBindings.findChildViewById(rootView, id);
      if (deleteAddress == null) {
        break missingId;
      }

      id = R.id.edtBuildingName;
      TextInputEditText edtBuildingName = ViewBindings.findChildViewById(rootView, id);
      if (edtBuildingName == null) {
        break missingId;
      }

      id = R.id.edtBuildingNum;
      TextInputEditText edtBuildingNum = ViewBindings.findChildViewById(rootView, id);
      if (edtBuildingNum == null) {
        break missingId;
      }

      id = R.id.edtCity;
      TextInputEditText edtCity = ViewBindings.findChildViewById(rootView, id);
      if (edtCity == null) {
        break missingId;
      }

      id = R.id.edtCountry;
      TextInputEditText edtCountry = ViewBindings.findChildViewById(rootView, id);
      if (edtCountry == null) {
        break missingId;
      }

      id = R.id.edtFloor;
      TextInputEditText edtFloor = ViewBindings.findChildViewById(rootView, id);
      if (edtFloor == null) {
        break missingId;
      }

      id = R.id.edtLabelName;
      TextInputEditText edtLabelName = ViewBindings.findChildViewById(rootView, id);
      if (edtLabelName == null) {
        break missingId;
      }

      id = R.id.edtNeighbour;
      TextInputEditText edtNeighbour = ViewBindings.findChildViewById(rootView, id);
      if (edtNeighbour == null) {
        break missingId;
      }

      id = R.id.edtPincode;
      TextInputEditText edtPincode = ViewBindings.findChildViewById(rootView, id);
      if (edtPincode == null) {
        break missingId;
      }

      id = R.id.edtSearch;
      AppCompatEditText edtSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.edtState;
      TextInputEditText edtState = ViewBindings.findChildViewById(rootView, id);
      if (edtState == null) {
        break missingId;
      }

      id = R.id.edtStreet;
      TextInputEditText edtStreet = ViewBindings.findChildViewById(rootView, id);
      if (edtStreet == null) {
        break missingId;
      }

      id = R.id.edtUnit;
      TextInputEditText edtUnit = ViewBindings.findChildViewById(rootView, id);
      if (edtUnit == null) {
        break missingId;
      }

      id = R.id.imageCount;
      AppCompatTextView imageCount = ViewBindings.findChildViewById(rootView, id);
      if (imageCount == null) {
        break missingId;
      }

      id = R.id.iv_addLabel;
      ImageView ivAddLabel = ViewBindings.findChildViewById(rootView, id);
      if (ivAddLabel == null) {
        break missingId;
      }

      id = R.id.iv_check_addLabel;
      ImageView ivCheckAddLabel = ViewBindings.findChildViewById(rootView, id);
      if (ivCheckAddLabel == null) {
        break missingId;
      }

      id = R.id.iv_check_home;
      ImageView ivCheckHome = ViewBindings.findChildViewById(rootView, id);
      if (ivCheckHome == null) {
        break missingId;
      }

      id = R.id.iv_check_office;
      ImageView ivCheckOffice = ViewBindings.findChildViewById(rootView, id);
      if (ivCheckOffice == null) {
        break missingId;
      }

      id = R.id.iv_home;
      ImageView ivHome = ViewBindings.findChildViewById(rootView, id);
      if (ivHome == null) {
        break missingId;
      }

      id = R.id.iv_office;
      ImageView ivOffice = ViewBindings.findChildViewById(rootView, id);
      if (ivOffice == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      LinearLayout mainLayout = (LinearLayout) rootView;

      id = R.id.rl_addLable_icon;
      RelativeLayout rlAddLableIcon = ViewBindings.findChildViewById(rootView, id);
      if (rlAddLableIcon == null) {
        break missingId;
      }

      id = R.id.rl_home_icon;
      RelativeLayout rlHomeIcon = ViewBindings.findChildViewById(rootView, id);
      if (rlHomeIcon == null) {
        break missingId;
      }

      id = R.id.rl_office_icon;
      RelativeLayout rlOfficeIcon = ViewBindings.findChildViewById(rootView, id);
      if (rlOfficeIcon == null) {
        break missingId;
      }

      id = R.id.rvSearchResult;
      RecyclerView rvSearchResult = ViewBindings.findChildViewById(rootView, id);
      if (rvSearchResult == null) {
        break missingId;
      }

      id = R.id.tv_addLabel;
      AppCompatTextView tvAddLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvAddLabel == null) {
        break missingId;
      }

      id = R.id.tvAddressText;
      AppCompatTextView tvAddressText = ViewBindings.findChildViewById(rootView, id);
      if (tvAddressText == null) {
        break missingId;
      }

      id = R.id.tvConfirm;
      AppCompatTextView tvConfirm = ViewBindings.findChildViewById(rootView, id);
      if (tvConfirm == null) {
        break missingId;
      }

      id = R.id.tv_home;
      AppCompatTextView tvHome = ViewBindings.findChildViewById(rootView, id);
      if (tvHome == null) {
        break missingId;
      }

      id = R.id.tv_office;
      AppCompatTextView tvOffice = ViewBindings.findChildViewById(rootView, id);
      if (tvOffice == null) {
        break missingId;
      }

      id = R.id.tvaddressType;
      AppCompatTextView tvaddressType = ViewBindings.findChildViewById(rootView, id);
      if (tvaddressType == null) {
        break missingId;
      }

      return new AddNewAddressBinding((LinearLayout) rootView, addImage, addLabelView, addressView,
          currentAddress, currentAddressLayout, deleteAddress, edtBuildingName, edtBuildingNum,
          edtCity, edtCountry, edtFloor, edtLabelName, edtNeighbour, edtPincode, edtSearch,
          edtState, edtStreet, edtUnit, imageCount, ivAddLabel, ivCheckAddLabel, ivCheckHome,
          ivCheckOffice, ivHome, ivOffice, linearLayout2, mainLayout, rlAddLableIcon, rlHomeIcon,
          rlOfficeIcon, rvSearchResult, tvAddLabel, tvAddressText, tvConfirm, tvHome, tvOffice,
          tvaddressType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
