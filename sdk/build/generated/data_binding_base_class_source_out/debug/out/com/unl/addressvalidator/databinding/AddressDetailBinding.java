// Generated by view binder compiler. Do not edit!
package com.unl.addressvalidator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.unl.addressvalidator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddressDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppCompatTextView accessibilityHeading;

  @NonNull
  public final LinearLayout accessibilityValue;

  @NonNull
  public final LinearLayout elevatorView;

  @NonNull
  public final RelativeLayout header;

  @NonNull
  public final AppCompatTextView headerTitle;

  @NonNull
  public final AppCompatTextView imgCount;

  @NonNull
  public final ImageView ivAddress;

  @NonNull
  public final ImageView ivAdressType;

  @NonNull
  public final AppCompatImageView ivClose;

  @NonNull
  public final AppCompatImageView landmarkPic;

  @NonNull
  public final LinearLayout llMain;

  @NonNull
  public final RecyclerView rvDeliverHours;

  @NonNull
  public final AppCompatTextView tvCategory;

  @NonNull
  public final AppCompatTextView tvOpenClosehours;

  @NonNull
  public final AppCompatTextView tvPlaceName;

  @NonNull
  public final LinearLayout wheelChairView;

  private AddressDetailBinding(@NonNull RelativeLayout rootView,
      @NonNull AppCompatTextView accessibilityHeading, @NonNull LinearLayout accessibilityValue,
      @NonNull LinearLayout elevatorView, @NonNull RelativeLayout header,
      @NonNull AppCompatTextView headerTitle, @NonNull AppCompatTextView imgCount,
      @NonNull ImageView ivAddress, @NonNull ImageView ivAdressType,
      @NonNull AppCompatImageView ivClose, @NonNull AppCompatImageView landmarkPic,
      @NonNull LinearLayout llMain, @NonNull RecyclerView rvDeliverHours,
      @NonNull AppCompatTextView tvCategory, @NonNull AppCompatTextView tvOpenClosehours,
      @NonNull AppCompatTextView tvPlaceName, @NonNull LinearLayout wheelChairView) {
    this.rootView = rootView;
    this.accessibilityHeading = accessibilityHeading;
    this.accessibilityValue = accessibilityValue;
    this.elevatorView = elevatorView;
    this.header = header;
    this.headerTitle = headerTitle;
    this.imgCount = imgCount;
    this.ivAddress = ivAddress;
    this.ivAdressType = ivAdressType;
    this.ivClose = ivClose;
    this.landmarkPic = landmarkPic;
    this.llMain = llMain;
    this.rvDeliverHours = rvDeliverHours;
    this.tvCategory = tvCategory;
    this.tvOpenClosehours = tvOpenClosehours;
    this.tvPlaceName = tvPlaceName;
    this.wheelChairView = wheelChairView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddressDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddressDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.address_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddressDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accessibilityHeading;
      AppCompatTextView accessibilityHeading = ViewBindings.findChildViewById(rootView, id);
      if (accessibilityHeading == null) {
        break missingId;
      }

      id = R.id.accessibilityValue;
      LinearLayout accessibilityValue = ViewBindings.findChildViewById(rootView, id);
      if (accessibilityValue == null) {
        break missingId;
      }

      id = R.id.elevatorView;
      LinearLayout elevatorView = ViewBindings.findChildViewById(rootView, id);
      if (elevatorView == null) {
        break missingId;
      }

      id = R.id.header;
      RelativeLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.headerTitle;
      AppCompatTextView headerTitle = ViewBindings.findChildViewById(rootView, id);
      if (headerTitle == null) {
        break missingId;
      }

      id = R.id.imgCount;
      AppCompatTextView imgCount = ViewBindings.findChildViewById(rootView, id);
      if (imgCount == null) {
        break missingId;
      }

      id = R.id.ivAddress;
      ImageView ivAddress = ViewBindings.findChildViewById(rootView, id);
      if (ivAddress == null) {
        break missingId;
      }

      id = R.id.ivAdressType;
      ImageView ivAdressType = ViewBindings.findChildViewById(rootView, id);
      if (ivAdressType == null) {
        break missingId;
      }

      id = R.id.ivClose;
      AppCompatImageView ivClose = ViewBindings.findChildViewById(rootView, id);
      if (ivClose == null) {
        break missingId;
      }

      id = R.id.landmarkPic;
      AppCompatImageView landmarkPic = ViewBindings.findChildViewById(rootView, id);
      if (landmarkPic == null) {
        break missingId;
      }

      id = R.id.llMain;
      LinearLayout llMain = ViewBindings.findChildViewById(rootView, id);
      if (llMain == null) {
        break missingId;
      }

      id = R.id.rvDeliverHours;
      RecyclerView rvDeliverHours = ViewBindings.findChildViewById(rootView, id);
      if (rvDeliverHours == null) {
        break missingId;
      }

      id = R.id.tvCategory;
      AppCompatTextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tvOpenClosehours;
      AppCompatTextView tvOpenClosehours = ViewBindings.findChildViewById(rootView, id);
      if (tvOpenClosehours == null) {
        break missingId;
      }

      id = R.id.tvPlaceName;
      AppCompatTextView tvPlaceName = ViewBindings.findChildViewById(rootView, id);
      if (tvPlaceName == null) {
        break missingId;
      }

      id = R.id.wheelChairView;
      LinearLayout wheelChairView = ViewBindings.findChildViewById(rootView, id);
      if (wheelChairView == null) {
        break missingId;
      }

      return new AddressDetailBinding((RelativeLayout) rootView, accessibilityHeading,
          accessibilityValue, elevatorView, header, headerTitle, imgCount, ivAddress, ivAdressType,
          ivClose, landmarkPic, llMain, rvDeliverHours, tvCategory, tvOpenClosehours, tvPlaceName,
          wheelChairView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
