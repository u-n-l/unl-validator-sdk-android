// Generated by view binder compiler. Do not edit!
package com.unl.addressvalidator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.unl.addressvalidator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LandmarkItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatTextView imgCount;

  @NonNull
  public final AppCompatImageView landmarkPic;

  @NonNull
  public final LinearLayout llMain;

  @NonNull
  public final ConstraintLayout mainLayout;

  @NonNull
  public final AppCompatTextView tvCategory;

  @NonNull
  public final AppCompatTextView tvPlaceName;

  private LandmarkItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatTextView imgCount, @NonNull AppCompatImageView landmarkPic,
      @NonNull LinearLayout llMain, @NonNull ConstraintLayout mainLayout,
      @NonNull AppCompatTextView tvCategory, @NonNull AppCompatTextView tvPlaceName) {
    this.rootView = rootView;
    this.imgCount = imgCount;
    this.landmarkPic = landmarkPic;
    this.llMain = llMain;
    this.mainLayout = mainLayout;
    this.tvCategory = tvCategory;
    this.tvPlaceName = tvPlaceName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LandmarkItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LandmarkItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.landmark_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LandmarkItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgCount;
      AppCompatTextView imgCount = ViewBindings.findChildViewById(rootView, id);
      if (imgCount == null) {
        break missingId;
      }

      id = R.id.landmarkPic;
      AppCompatImageView landmarkPic = ViewBindings.findChildViewById(rootView, id);
      if (landmarkPic == null) {
        break missingId;
      }

      id = R.id.llMain;
      LinearLayout llMain = ViewBindings.findChildViewById(rootView, id);
      if (llMain == null) {
        break missingId;
      }

      ConstraintLayout mainLayout = (ConstraintLayout) rootView;

      id = R.id.tvCategory;
      AppCompatTextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tvPlaceName;
      AppCompatTextView tvPlaceName = ViewBindings.findChildViewById(rootView, id);
      if (tvPlaceName == null) {
        break missingId;
      }

      return new LandmarkItemBinding((ConstraintLayout) rootView, imgCount, landmarkPic, llMain,
          mainLayout, tvCategory, tvPlaceName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
